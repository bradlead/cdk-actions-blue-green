name: Blue/Green deployment workflow
on: [push]
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:
  run_tests:
    environment: 
      name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./cdk/
      
      - name: run tests
        run: cd cdk && npm run test

  deploy_test_stack:
    needs: run_tests
    environment: 
      name: test
      url: ${{ steps.set_outputs.outputs.TEST_URL }}
    runs-on: ubuntu-latest
    outputs:
      TEST_URL: ${{ steps.set_outputs.outputs.TEST_URL }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: 'arn:aws:iam::${{ secrets.TEST_ACCOUNT }}:role/github-actions-deployment-role'
          aws-region: ${{ secrets.TEST_REGION }}

      - name: Check credentials
        run: aws sts get-caller-identity

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./cdk/

      - name: Synth stack
        run: cd cdk && yarn cdk synth

      - id: deploy-stack
        name: Deploy stack
        run: cd cdk && REGION=${{ secrets.TEST_REGION }} ACCOUNT=${{ secrets.TEST_ACCOUNT }} yarn cdk deploy --outputs-file ./cdk-outputs.json --require-approval never
  
      - name: Edit json
        id: set_outputs
        run:  |
          values=$(jq -r ".[] | values[]" cdk/cdk-outputs.json)
          echo "TEST_URL<<EOF" >> "${GITHUB_OUTPUT}"
          echo "$values" >> "${GITHUB_OUTPUT}"
          echo "EOF" >> "${GITHUB_OUTPUT}"

  diff_prod_stack_check:
    needs: deploy_test_stack
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: 'arn:aws:iam::${{ secrets.PROD_ACCOUNT }}:role/GitHubActionsDeploymentRole'
          aws-region: ${{ secrets.PROD_REGION }}

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./cdk/

      - name: Run cdk diff
        run: cd cdk && cdk diff &> diff.txt

      - name: Archive cdk diff results
        uses: actions/upload-artifact@v3
        with:
          name: cdk-diff-report
          path: cdk/diff.txt

  deploy_prod_stack:
    environment:
      name: production
      url: ${{ steps.set_outputs.outputs.PROD_URL }}
    needs: diff_prod_stack_check
    runs-on: ubuntu-latest    
    outputs:
      PROD_URL: ${{ steps.set_outputs.outputs.PROD_URL }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: 'arn:aws:iam::${{ secrets.PROD_ACCOUNT }}:role/GitHubActionsDeploymentRole'
          aws-region: ${{ secrets.PROD_REGION }}

      - name: Check credentials
        run: aws sts get-caller-identity

      - name: Install dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./cdk/

      - name: Synth stack
        run: cd cdk && yarn cdk synth

      - id: deploy-stack
        name: Deploy stack
        run: cd cdk && REGION=${{ secrets.PROD_REGION }} ACCOUNT=${{ secrets.PROD_ACCOUNT }} yarn cdk deploy --outputs-file ./cdk-outputs.json --require-approval never
      
      - name: Edit json
        id: set_outputs
        run:  |
          values=$(jq -r ".[] | values[]" cdk/cdk-outputs.json)
          echo "PROD_URL<<EOF" >> "${GITHUB_OUTPUT}"
          echo "$values" >> "${GITHUB_OUTPUT}"
          echo "EOF" >> "${GITHUB_OUTPUT}"